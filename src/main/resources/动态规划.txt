参考链接：https://cloud.tencent.com/developer/article/2147065?areaSource=102001.10&traceId=f95SsvJ4lc17W7fHZ-D4R

1.简单基础DP：
    1.1 递推：递推形式一般比较单一，从前往后，分类枚举就行
    1.2 背包问题：0-1背包，完全背包，分组背包，多重背包
    1.3 LIS：
    1.4 LCS：

2.区间DP：一般是枚举区间，把区间分为左右两部分，然后求出左右区间再合并

3.树形DP：树形DP是建立在树这种数据结构上的DP，一般比较好想，通过DFS维护从根到叶子节点或者从叶子到根的状态转移

4.数位DP：数位dp,主要用来解决统计满足某类特殊关系或有某些特点的区间内的数的个数，它是按位来进行计数统计的，
  可以保存子状态，速度较快。数位dp做多了后，套路基本上都差不多，关键把要保存的状态给抽象出来，保存下来。

5.概率（期望）DP：

6.状态压缩DP：
    https://blog.csdn.net/m0_61714195/article/details/125007504
    例题：Q1595
7.数据结构优化的DP：
    7.1 二进制优化
    7.2 单调队列优化
    7.3 斜率优化
    7.4 四边形不等式优化


DP的无后效性：为了保证计算子问题能够按照顺序、不重复地进行，动态规划要求已经求解的子问题不受后续阶段的影响。
这个条件被称为无后效性。换言之，动态规划对状态空间的遍历构成一张有向无环图，遍历就是该有向无环图的一个拓扑排序。
有向无环图中的节点对应问题中的状态，图中的边则对应状态之间的转移，转移的选取就是动态规划中的决策。


例题：Q1262、Q1595(状压)、Qx5vk4t、Qx5w3sr、